//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.296 版自动生成。
// 
#pragma warning disable 1591

namespace FS.ADIM.OA.WebUI.MOSSOA {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OA_DocumentServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DictionaryEntry[]))]
    public partial class OA_DocumentService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback TestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckHaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback Download_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileLengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback Upload_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckInOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback UndoCheckOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback Remove2OperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMetaOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyToNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyToOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertToDEOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OA_DocumentService() {
            this.Url = global::FS.ADIM.OA.WebUI.Properties.Settings.Default.FS_ADIM_OA_WebUI_MOSSOA_OADocumentService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event TestCompletedEventHandler TestCompleted;
        
        /// <remarks/>
        public event CheckHaveCompletedEventHandler CheckHaveCompleted;
        
        /// <remarks/>
        public event DownloadCompletedEventHandler DownloadCompleted;
        
        /// <remarks/>
        public event Download_NewCompletedEventHandler Download_NewCompleted;
        
        /// <remarks/>
        public event FileLengthCompletedEventHandler FileLengthCompleted;
        
        /// <remarks/>
        public event UploadCompletedEventHandler UploadCompleted;
        
        /// <remarks/>
        public event Upload_NewCompletedEventHandler Upload_NewCompleted;
        
        /// <remarks/>
        public event CheckInCompletedEventHandler CheckInCompleted;
        
        /// <remarks/>
        public event CheckOutCompletedEventHandler CheckOutCompleted;
        
        /// <remarks/>
        public event UndoCheckOutCompletedEventHandler UndoCheckOutCompleted;
        
        /// <remarks/>
        public event Remove2CompletedEventHandler Remove2Completed;
        
        /// <remarks/>
        public event RemoveCompletedEventHandler RemoveCompleted;
        
        /// <remarks/>
        public event UpdateMetaCompletedEventHandler UpdateMetaCompleted;
        
        /// <remarks/>
        public event CopyToNewCompletedEventHandler CopyToNewCompleted;
        
        /// <remarks/>
        public event CopyToCompletedEventHandler CopyToCompleted;
        
        /// <remarks/>
        public event ConvertToDECompletedEventHandler ConvertToDECompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Test", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Test() {
            object[] results = this.Invoke("Test", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TestAsync() {
            this.TestAsync(null);
        }
        
        /// <remarks/>
        public void TestAsync(object userState) {
            if ((this.TestOperationCompleted == null)) {
                this.TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestOperationCompleted);
            }
            this.InvokeAsync("Test", new object[0], this.TestOperationCompleted, userState);
        }
        
        private void OnTestOperationCompleted(object arg) {
            if ((this.TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCompleted(this, new TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckHave", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckHave(string[] fileInfo) {
            object[] results = this.Invoke("CheckHave", new object[] {
                        fileInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckHaveAsync(string[] fileInfo) {
            this.CheckHaveAsync(fileInfo, null);
        }
        
        /// <remarks/>
        public void CheckHaveAsync(string[] fileInfo, object userState) {
            if ((this.CheckHaveOperationCompleted == null)) {
                this.CheckHaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckHaveOperationCompleted);
            }
            this.InvokeAsync("CheckHave", new object[] {
                        fileInfo}, this.CheckHaveOperationCompleted, userState);
        }
        
        private void OnCheckHaveOperationCompleted(object arg) {
            if ((this.CheckHaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckHaveCompleted(this, new CheckHaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Download", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Download(string[] fileInfo) {
            object[] results = this.Invoke("Download", new object[] {
                        fileInfo});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DownloadAsync(string[] fileInfo) {
            this.DownloadAsync(fileInfo, null);
        }
        
        /// <remarks/>
        public void DownloadAsync(string[] fileInfo, object userState) {
            if ((this.DownloadOperationCompleted == null)) {
                this.DownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadOperationCompleted);
            }
            this.InvokeAsync("Download", new object[] {
                        fileInfo}, this.DownloadOperationCompleted, userState);
        }
        
        private void OnDownloadOperationCompleted(object arg) {
            if ((this.DownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadCompleted(this, new DownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Download_New", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Download_New(string[] fileInfo, string TempFileName) {
            object[] results = this.Invoke("Download_New", new object[] {
                        fileInfo,
                        TempFileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Download_NewAsync(string[] fileInfo, string TempFileName) {
            this.Download_NewAsync(fileInfo, TempFileName, null);
        }
        
        /// <remarks/>
        public void Download_NewAsync(string[] fileInfo, string TempFileName, object userState) {
            if ((this.Download_NewOperationCompleted == null)) {
                this.Download_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownload_NewOperationCompleted);
            }
            this.InvokeAsync("Download_New", new object[] {
                        fileInfo,
                        TempFileName}, this.Download_NewOperationCompleted, userState);
        }
        
        private void OnDownload_NewOperationCompleted(object arg) {
            if ((this.Download_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Download_NewCompleted(this, new Download_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FileLength", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long FileLength(string[] fileInfo) {
            object[] results = this.Invoke("FileLength", new object[] {
                        fileInfo});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void FileLengthAsync(string[] fileInfo) {
            this.FileLengthAsync(fileInfo, null);
        }
        
        /// <remarks/>
        public void FileLengthAsync(string[] fileInfo, object userState) {
            if ((this.FileLengthOperationCompleted == null)) {
                this.FileLengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileLengthOperationCompleted);
            }
            this.InvokeAsync("FileLength", new object[] {
                        fileInfo}, this.FileLengthOperationCompleted, userState);
        }
        
        private void OnFileLengthOperationCompleted(object arg) {
            if ((this.FileLengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileLengthCompleted(this, new FileLengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Upload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Upload(string[] fileInfo, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bStream, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] DictionaryEntry[] deMeta, bool overwrite) {
            object[] results = this.Invoke("Upload", new object[] {
                        fileInfo,
                        bStream,
                        deMeta,
                        overwrite});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void UploadAsync(string[] fileInfo, byte[] bStream, DictionaryEntry[] deMeta, bool overwrite) {
            this.UploadAsync(fileInfo, bStream, deMeta, overwrite, null);
        }
        
        /// <remarks/>
        public void UploadAsync(string[] fileInfo, byte[] bStream, DictionaryEntry[] deMeta, bool overwrite, object userState) {
            if ((this.UploadOperationCompleted == null)) {
                this.UploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadOperationCompleted);
            }
            this.InvokeAsync("Upload", new object[] {
                        fileInfo,
                        bStream,
                        deMeta,
                        overwrite}, this.UploadOperationCompleted, userState);
        }
        
        private void OnUploadOperationCompleted(object arg) {
            if ((this.UploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadCompleted(this, new UploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Upload_New", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Upload_New(string[] fileInfo, string strFileTempUrl, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] DictionaryEntry[] deMeta, bool overwrite) {
            object[] results = this.Invoke("Upload_New", new object[] {
                        fileInfo,
                        strFileTempUrl,
                        deMeta,
                        overwrite});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Upload_NewAsync(string[] fileInfo, string strFileTempUrl, DictionaryEntry[] deMeta, bool overwrite) {
            this.Upload_NewAsync(fileInfo, strFileTempUrl, deMeta, overwrite, null);
        }
        
        /// <remarks/>
        public void Upload_NewAsync(string[] fileInfo, string strFileTempUrl, DictionaryEntry[] deMeta, bool overwrite, object userState) {
            if ((this.Upload_NewOperationCompleted == null)) {
                this.Upload_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpload_NewOperationCompleted);
            }
            this.InvokeAsync("Upload_New", new object[] {
                        fileInfo,
                        strFileTempUrl,
                        deMeta,
                        overwrite}, this.Upload_NewOperationCompleted, userState);
        }
        
        private void OnUpload_NewOperationCompleted(object arg) {
            if ((this.Upload_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Upload_NewCompleted(this, new Upload_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckIn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckIn(string[] fileInfo) {
            object[] results = this.Invoke("CheckIn", new object[] {
                        fileInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckInAsync(string[] fileInfo) {
            this.CheckInAsync(fileInfo, null);
        }
        
        /// <remarks/>
        public void CheckInAsync(string[] fileInfo, object userState) {
            if ((this.CheckInOperationCompleted == null)) {
                this.CheckInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckInOperationCompleted);
            }
            this.InvokeAsync("CheckIn", new object[] {
                        fileInfo}, this.CheckInOperationCompleted, userState);
        }
        
        private void OnCheckInOperationCompleted(object arg) {
            if ((this.CheckInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckInCompleted(this, new CheckInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckOut(string[] fileInfo) {
            object[] results = this.Invoke("CheckOut", new object[] {
                        fileInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOutAsync(string[] fileInfo) {
            this.CheckOutAsync(fileInfo, null);
        }
        
        /// <remarks/>
        public void CheckOutAsync(string[] fileInfo, object userState) {
            if ((this.CheckOutOperationCompleted == null)) {
                this.CheckOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOutOperationCompleted);
            }
            this.InvokeAsync("CheckOut", new object[] {
                        fileInfo}, this.CheckOutOperationCompleted, userState);
        }
        
        private void OnCheckOutOperationCompleted(object arg) {
            if ((this.CheckOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOutCompleted(this, new CheckOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UndoCheckOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UndoCheckOut(string[] fileInfo) {
            object[] results = this.Invoke("UndoCheckOut", new object[] {
                        fileInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UndoCheckOutAsync(string[] fileInfo) {
            this.UndoCheckOutAsync(fileInfo, null);
        }
        
        /// <remarks/>
        public void UndoCheckOutAsync(string[] fileInfo, object userState) {
            if ((this.UndoCheckOutOperationCompleted == null)) {
                this.UndoCheckOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUndoCheckOutOperationCompleted);
            }
            this.InvokeAsync("UndoCheckOut", new object[] {
                        fileInfo}, this.UndoCheckOutOperationCompleted, userState);
        }
        
        private void OnUndoCheckOutOperationCompleted(object arg) {
            if ((this.UndoCheckOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UndoCheckOutCompleted(this, new UndoCheckOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Remove2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Remove2(string[] fileInfo, bool isTrueDel) {
            object[] results = this.Invoke("Remove2", new object[] {
                        fileInfo,
                        isTrueDel});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Remove2Async(string[] fileInfo, bool isTrueDel) {
            this.Remove2Async(fileInfo, isTrueDel, null);
        }
        
        /// <remarks/>
        public void Remove2Async(string[] fileInfo, bool isTrueDel, object userState) {
            if ((this.Remove2OperationCompleted == null)) {
                this.Remove2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemove2OperationCompleted);
            }
            this.InvokeAsync("Remove2", new object[] {
                        fileInfo,
                        isTrueDel}, this.Remove2OperationCompleted, userState);
        }
        
        private void OnRemove2OperationCompleted(object arg) {
            if ((this.Remove2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Remove2Completed(this, new Remove2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Remove", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Remove(string[] fileInfo) {
            object[] results = this.Invoke("Remove", new object[] {
                        fileInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveAsync(string[] fileInfo) {
            this.RemoveAsync(fileInfo, null);
        }
        
        /// <remarks/>
        public void RemoveAsync(string[] fileInfo, object userState) {
            if ((this.RemoveOperationCompleted == null)) {
                this.RemoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveOperationCompleted);
            }
            this.InvokeAsync("Remove", new object[] {
                        fileInfo}, this.RemoveOperationCompleted, userState);
        }
        
        private void OnRemoveOperationCompleted(object arg) {
            if ((this.RemoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveCompleted(this, new RemoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateMeta", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateMeta(string[] fileInfo, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] DictionaryEntry[] deMeta) {
            object[] results = this.Invoke("UpdateMeta", new object[] {
                        fileInfo,
                        deMeta});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMetaAsync(string[] fileInfo, DictionaryEntry[] deMeta) {
            this.UpdateMetaAsync(fileInfo, deMeta, null);
        }
        
        /// <remarks/>
        public void UpdateMetaAsync(string[] fileInfo, DictionaryEntry[] deMeta, object userState) {
            if ((this.UpdateMetaOperationCompleted == null)) {
                this.UpdateMetaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMetaOperationCompleted);
            }
            this.InvokeAsync("UpdateMeta", new object[] {
                        fileInfo,
                        deMeta}, this.UpdateMetaOperationCompleted, userState);
        }
        
        private void OnUpdateMetaOperationCompleted(object arg) {
            if ((this.UpdateMetaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMetaCompleted(this, new UpdateMetaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyToNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] CopyToNew(string[] fileInfo, string[] newFileInfo, bool overwrite) {
            object[] results = this.Invoke("CopyToNew", new object[] {
                        fileInfo,
                        newFileInfo,
                        overwrite});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void CopyToNewAsync(string[] fileInfo, string[] newFileInfo, bool overwrite) {
            this.CopyToNewAsync(fileInfo, newFileInfo, overwrite, null);
        }
        
        /// <remarks/>
        public void CopyToNewAsync(string[] fileInfo, string[] newFileInfo, bool overwrite, object userState) {
            if ((this.CopyToNewOperationCompleted == null)) {
                this.CopyToNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyToNewOperationCompleted);
            }
            this.InvokeAsync("CopyToNew", new object[] {
                        fileInfo,
                        newFileInfo,
                        overwrite}, this.CopyToNewOperationCompleted, userState);
        }
        
        private void OnCopyToNewOperationCompleted(object arg) {
            if ((this.CopyToNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyToNewCompleted(this, new CopyToNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyTo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] CopyTo(string[] fileInfo, string newFileName, bool overwrite) {
            object[] results = this.Invoke("CopyTo", new object[] {
                        fileInfo,
                        newFileName,
                        overwrite});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void CopyToAsync(string[] fileInfo, string newFileName, bool overwrite) {
            this.CopyToAsync(fileInfo, newFileName, overwrite, null);
        }
        
        /// <remarks/>
        public void CopyToAsync(string[] fileInfo, string newFileName, bool overwrite, object userState) {
            if ((this.CopyToOperationCompleted == null)) {
                this.CopyToOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyToOperationCompleted);
            }
            this.InvokeAsync("CopyTo", new object[] {
                        fileInfo,
                        newFileName,
                        overwrite}, this.CopyToOperationCompleted, userState);
        }
        
        private void OnCopyToOperationCompleted(object arg) {
            if ((this.CopyToCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyToCompleted(this, new CopyToCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConvertToDE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public DictionaryEntry[] ConvertToDE([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] DictionaryEntry[] entries) {
            object[] results = this.Invoke("ConvertToDE", new object[] {
                        entries});
            return ((DictionaryEntry[])(results[0]));
        }
        
        /// <remarks/>
        public void ConvertToDEAsync(DictionaryEntry[] entries) {
            this.ConvertToDEAsync(entries, null);
        }
        
        /// <remarks/>
        public void ConvertToDEAsync(DictionaryEntry[] entries, object userState) {
            if ((this.ConvertToDEOperationCompleted == null)) {
                this.ConvertToDEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertToDEOperationCompleted);
            }
            this.InvokeAsync("ConvertToDE", new object[] {
                        entries}, this.ConvertToDEOperationCompleted, userState);
        }
        
        private void OnConvertToDEOperationCompleted(object arg) {
            if ((this.ConvertToDECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertToDECompleted(this, new ConvertToDECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DictionaryEntry {
        
        private object keyField;
        
        private object valueField;
        
        /// <remarks/>
        public object Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestCompletedEventHandler(object sender, TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckHaveCompletedEventHandler(object sender, CheckHaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckHaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckHaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DownloadCompletedEventHandler(object sender, DownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Download_NewCompletedEventHandler(object sender, Download_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Download_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Download_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FileLengthCompletedEventHandler(object sender, FileLengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileLengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileLengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UploadCompletedEventHandler(object sender, UploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Upload_NewCompletedEventHandler(object sender, Upload_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Upload_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Upload_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckInCompletedEventHandler(object sender, CheckInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckOutCompletedEventHandler(object sender, CheckOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UndoCheckOutCompletedEventHandler(object sender, UndoCheckOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UndoCheckOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UndoCheckOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Remove2CompletedEventHandler(object sender, Remove2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Remove2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Remove2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveCompletedEventHandler(object sender, RemoveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateMetaCompletedEventHandler(object sender, UpdateMetaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMetaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMetaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CopyToNewCompletedEventHandler(object sender, CopyToNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyToNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyToNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CopyToCompletedEventHandler(object sender, CopyToCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConvertToDECompletedEventHandler(object sender, ConvertToDECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertToDECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertToDECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DictionaryEntry[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DictionaryEntry[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591